### WAR OVERVIEW WINDOW
window = {
	gfxtype = windowgfx
	name = "war_overview_window"
	parentanchor = bottom|hcenter
	size = { 100% 280 }
	movable = no

	layer = middle
	allow_outside = yes

	state = {
		name = _mouse_hierarchy_enter
		start_sound = {
			soundeffect = "event:/SFX/Snapshots/sfx_snapshots_WaroutcomeWindow"
			soundparam = {
				name = StateChange
				value = 2.0
			}
		}
	}

	state = {
		name = _mouse_hierarchy_leave
		start_sound = {
			soundeffect = "event:/SFX/Snapshots/sfx_snapshots_WaroutcomeWindow"
			soundparam = {
				name = StateChange
				value = 1.0
			}
		}
	}

	state = {
		name = _show
		on_start = "[PdxGuiTriggerAllAnimations('war_overview_show')]"
		using = Sound_WindowShow_Standard
		start_sound = {
			soundeffect = "event:/SFX/UI/War/sfx_ui_window_war_show"
		}
	}

	state = {
		name = _hide
		on_start = "[PdxGuiTriggerAllAnimations('war_overview_hide')]"
		on_start = "[ExecuteConsoleCommand('effect peace_reset_list')]"
		duration = 0.5
		using = Sound_WindowHide_Standard
		start_sound = {
			soundeffect = "event:/SFX/UI/War/sfx_ui_window_war_hide"
		}
	}

	widget = {
		parentanchor = center
		size = { 2250 295 }
		allow_outside = yes

		hbox = {
			widget = {
				name = "left"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				flowcontainer = {
					parentanchor = bottom|left

					state = {
						name = "war_overview_show"
						next = b
						position_x = -200
						alpha = 0
					}

					state = {   ####### default ####
						name = "b"
						next = "c"
						duration = 0.25
						delay = 0.15
						using = Animation_Curve_Default

						position_x = 0
						alpha = 1
					}

					state = {
						name = "c"
						next = "d"
						duration = 0.05
						using = Animation_Curve_Default

						position_x = -1
						position_y = -1
						alpha = 1
					}

					state = {  ####### default ####
						name = "d"
						duration = 0.25
						using = Animation_Curve_Default

						position_x = 0
						position_y = 0
						alpha = 1
					}

					state = {
						name = "war_overview_hide"
						duration = 0.25
						using = Animation_Curve_Default
						position_x = -200
						alpha = 0
					}

					widget = {
						name = "backgrounds_1"
						size = { 474 280 }

						background = {
							using = Background_WarOverview
							mirror = horizontal
						}

						background = {
							using = Background_WarOverview_Pattern
							mirror = horizontal
						}

						icon = {
							size = { 100% 100% }
							using = Background_WarOverview_Frame
							mirror = horizontal

							icon = {
								position = { 162 -5 }
								size = { 20 20 }
								texture = "gfx/interface/component_decoration/decoration_arch.dds"
								mirror = horizontal
							}
						}

						icon_blood_splatter = {
							visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)25' )]"
							mirror = horizontal
						}

						icon_cloth_tears = {
							visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)25' )]"
							mirror = horizontal
						}
					}

					widget = {
						name = "backgrounds_2"
						size = { 350 280 }

						background = {
							using = Background_WarOverview_2
							mirror = horizontal
						}

						background = {
							using = Background_WarOverview_Pattern_2
							mirror = horizontal
						}

						icon = {
							size = { 100% 100% }
							using = Background_WarOverview_Frame_2
							mirror = horizontal
						}

						background = {
							using = Background_Area_Dark
							margin_top = -125
							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_corner.dds"
								blend_mode = alphamultiply
							}
						}

						icon_blood_splatter_2 = {
							visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)25' )]"
							mirror = horizontal
						}

						icon_cloth_tears_2 = {
							visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)25' )]"
							mirror = horizontal
						}
					}
				}
			}

			widget = {
				name = "right"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				flowcontainer = {
					parentanchor = bottom|right

					state = {
						name = "war_overview_show"
						next = b
						position_x = 200
						alpha = 0
					}

					state = {   ####### default ####
						name = "b"
						next = "c"
						duration = 0.25
						delay = 0.15
						using = Animation_Curve_Default

						position_x = 0
						alpha = 1
					}

					state = {
						name = "c"
						next = "d"
						duration = 0.05
						using = Animation_Curve_Default

						position_x = -1
						position_y = -1
						alpha = 1
					}

					state = {  ####### default ####
						name = "d"
						duration = 0.25
						using = Animation_Curve_Default

						position_x = 0
						position_y = 0
						alpha = 1
					}

					state = {
						name = "war_overview_hide"
						duration = 0.25
						using = Animation_Curve_Default
						position_x = 200
						alpha = 0
					}

					widget = {
						name = "backgrounds_2"
						size = { 350 280 }

						background = {
							using = Background_WarOverview_2
						}

						background = {
							using = Background_WarOverview_Pattern_2
						}

						icon = {
							size = { 100% 100% }
							using = Background_WarOverview_Frame_2
						}

						background = {
							using = Background_Area_Dark
							margin_top = -125
							mirror = horizontal

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_corner.dds"
								blend_mode = alphamultiply
							}
						}

						icon_blood_splatter_2 = {
							visible = "[GreaterThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)75' )]"
						}

						icon_cloth_tears_2 = {
							visible = "[GreaterThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)75' )]"
						}
					}

					widget = {
						name = "backgrounds_1"
						size = { 474 280 }

						background = {
							using = Background_WarOverview
						}

						background = {
							using = Background_WarOverview_Pattern
						}

						icon = {
							size = { 100% 100% }
							using = Background_WarOverview_Frame

							icon = {
								parentanchor = right
								position = { -162 -5 }
								size = { 20 20 }
								texture = "gfx/interface/component_decoration/decoration_arch.dds"
							}
						}

						icon_blood_splatter = {
							visible = "[GreaterThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)75' )]"
						}

						icon_cloth_tears = {
							visible = "[GreaterThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)75' )]"
						}
					}
				}
			}
		}

		hbox = {
			allow_outside = yes

			widget = {
				name = "left"
				layoutpolicy_horizontal = expanding
				layoutstretchfactor_horizontal = 1
				size = { 0 295 }
				allow_outside = yes

				hbox = {
					allow_outside = yes
					spacing = 50

					expand = {
						layoutpolicy_horizontal = expanding
					}

					portrait_war_overview = {
						datacontext = "[WarOverviewWindow.GetLeftSideLeaderItem]"
						datacontext = "[WarParticipantItem.GetCharacter]"
						margin_bottom = 65

						blockoverride "portrait_button_template_tooltip"
						{
							tooltip = "[WarParticipantItem.GetLeaderTooltip]"
						}

						state = {
							
							name = "war_overview_show"
							next = b
							alpha = 0
						}

						state = {
							name = "b"
							duration = 0.5
							delay = 0.1
							alpha = 1
						}

						state = {
							name = "war_overview_hide"
							duration = 0.3
							using = Animation_Curve_Default
							alpha = 0
						}

						### INFO ###
						vbox = {
							margin_bottom = 65
							maximumsize = { 310 -1 }

							using = Background_WarOverview_3

							state = {
								name = "war_overview_show"
								next = b
								position_y = 300
								alpha = 0

								delay = 0.1
							}

							state = {
								name = "b"
								next = "c"
								duration = 0.3
								using = Animation_Curve_Default

								position_y = -2
								alpha = 1
							}

							state = {
								name = "c"
								duration = 0.05
								using = Animation_Curve_Default

								position_y = 0
								alpha = 1
							}

							state = {
								name = "war_overview_hide"
								duration = 0.3
								using = Animation_Curve_Default

								position_y = 300
								alpha = 0
							}

							expand = {}

							hbox = {
								layoutpolicy_horizontal = expanding

								background = {
									using = Text_Label_Background
									margin_top = -24
									margin_bottom = -15
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "[WarOverviewWindow.GetLeftSideHeader]"
									default_format = "#high"
									using = Font_Size_Big
									align = center
									autoresize = no
									fontsize_min = 14
									max_width = 185
								}

								coa_realm_small_crown = {
									datacontext = "[WarOverviewWindow.GetLeftSideLeaderItem]"
									datacontext = "[WarParticipantItem.GetCharacter]"
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								margin = { 5 0 }

								background = {
									using = Background_Area_Dark
								}

								text_single = {
									text = "WAR_OVERVIEW_TOTAL_SOLDIERS"
									layoutpolicy_horizontal = expanding
									align = left
									autoresize = no
									margin_left = 7
								}

								hbox = {
									layoutpolicy_horizontal = expanding

									soldiers_and_quality_small = {
										datacontext = "[WarOverviewWindow.GetLeftSideComposition]"
									}

									expand = {}
								}
							}
						}
					}

					vbox = {
						layoutpolicy_vertical = expanding

						state = {
							name = "war_overview_show"
							next = b
							alpha = 0
						}

						state = {
							name = "b"
							duration = 0.7
							delay = 0.3
							alpha = 1
						}

						state = {
							name = "war_overview_hide"
							duration = 0.3
							using = Animation_Curve_Default
							alpha = 0
						}

						using = Background_WarOverview_Ally

						hbox = {
							visible = "[GetVariableSystem.Exists( 'characterlist_left')]"
							minimumsize = { 250 160 }
						}

						expand = {}

						### Multiple participants
		
						
						hbox = {
							minimumsize = { 250 160 }
							visible = "[Not(GetVariableSystem.Exists( 'characterlist_left'))]"

							overlappingitembox = {

								datamodel = "[WarOverviewWindow.GetLeftSideMainParticipantItems]"
								autoresize = yes

								item = {
									portrait_shoulders = {
										datacontext = "[WarParticipantItem.GetCharacter]"
										visible = "[Character.IsValid]"

										blockoverride "opinion_box" {}

										blockoverride "portrait_button_template_tooltip"
										{
											tooltip = "[WarParticipantItem.GetParticipantTooltip]"
										}

									}
								}
							}
						}

						### Allies ###
						hbox = {
							layoutpolicy_horizontal = expanding

							expand = {}

							button_group = {
								onclick = "[GetVariableSystem.Toggle( 'characterlist_left' )]"
								tooltip = "WAR_OVERVIEW_SHOW_ALLIES"

								hbox = {
									set_parent_size_to_minimum = yes
									minimumsize = { 0 30 }
									margin = { 5 0 }
									spacing = 3

									background = {
										using = Text_Label_Background
										margin = { 5 0 }
									}

									button_plus_small = {
										onclick = "[GetVariableSystem.Toggle( 'characterlist_left' )]"
									}

									text_single = {
										text = "WAR_OVERVIEW_ALLIES_LEFT"
										using = Font_Size_Small
										align = nobaseline
									}
								}
							}
						}

						expand = {}
					}
				}
			}

			### empty space for center widget ###
			widget = {
				size = { 790 300 }
			}

			widget = {
				name = "right"
				layoutpolicy_horizontal = expanding
				layoutstretchfactor_horizontal = 1
				size = { 0 295 }
				allow_outside = yes

				hbox = {
					allow_outside = yes
					spacing = 50

					vbox = {
						layoutpolicy_vertical = expanding

						state = {
							name = "war_overview_show"
							next = b
							alpha = 0
						}

						state = {
							name = "b"
							duration = 0.7
							delay = 0.3
							alpha = 1
						}

						state = {
							name = "war_overview_hide"
							duration = 0.3
							using = Animation_Curve_Default
							alpha = 0
						}

						using = Background_WarOverview_Ally

						hbox = {
							visible = "[GetVariableSystem.Exists( 'characterlist_right')]"
							minimumsize = { 250 160 }
						}

						expand = {}

						### multiple participants
						overlappingitembox = {
							datamodel = "[WarOverviewWindow.GetRightSideMainParticipantItems]"
							visible = "[Not(GetVariableSystem.Exists( 'characterlist_right'))]"
							minimumsize = { 250 160 }
							righttoleft = yes

							item = {
								portrait_shoulders = {
									datacontext = "[WarParticipantItem.GetCharacter]"
									visible = "[Character.IsValid]"

									blockoverride "opinion_box" {}

									blockoverride "portrait_button_template_tooltip"
									{
										tooltip = "[WarParticipantItem.GetParticipantTooltip]"
									}


								}
							}
						}

						### +Allies ###
						hbox = {
							layoutpolicy_horizontal = expanding

							button = {
								onclick = "[GetVariableSystem.Toggle( 'characterlist_right' )]"
								tooltip = "WAR_OVERVIEW_SHOW_ALLIES"

								hbox = {
									set_parent_size_to_minimum = yes
									minimumsize = { 0 30 }
									margin = { 5 0 }
									spacing = 3

									background = {
										using = Text_Label_Background
										margin = { 5 0 }
									}

									button_plus_small = {
										onclick = "[GetVariableSystem.Toggle( 'characterlist_right' )]"
									}
									text_single = {
										text = "WAR_OVERVIEW_ALLIES_RIGHT"
										using = Font_Size_Small
										align = nobaseline
									}
								}
							}

							expand = {}
						}

						expand = {}
					}

					portrait_war_overview = {
						datacontext = "[WarOverviewWindow.GetRightSideLeaderItem]"
						datacontext = "[WarParticipantItem.GetCharacter]"
						margin_bottom = 65

						blockoverride "portrait_transformation"
						{
							portrait_scale = { -1 1 }
							portrait_offset = { 1 0 }
						}

						blockoverride "portrait_button_template_tooltip"
						{
							tooltip = "[WarParticipantItem.GetLeaderTooltip]"
						}

						state = {
							
							name = "war_overview_show"
							next = b
							alpha = 0
						}

						state = {
							name = "b"
							duration = 0.5
							delay = 0.1
							alpha = 1
						}

						state = {
							name = "war_overview_hide"
							duration = 0.3
							using = Animation_Curve_Default
							alpha = 0
						}

						### INFO ###
						vbox = {
							margin_bottom = 65
							maximumsize = { 310 -1 }

							using = Background_WarOverview_3

							state = {
								name = "war_overview_show"
								next = b
								position_y = 300
								alpha = 0

								delay = 0.1
							}

							state = {
								name = "b"
								next = "c"
								duration = 0.3
								using = Animation_Curve_Default

								position_y = -2
								alpha = 1
							}

							state = {
								name = "c"
								duration = 0.05
								using = Animation_Curve_Default

								position_y = 0
								alpha = 1
							}

							state = {
								name = "war_overview_hide"
								duration = 0.3
								using = Animation_Curve_Default

								position_y = 300
								alpha = 0
							}

							expand = {}

							hbox = {
								layoutpolicy_horizontal = expanding
								
								background = {
									using = Text_Label_Background
									margin_top = -24
									margin_bottom = -15
								}

								coa_realm_small_crown = {
									datacontext = "[WarOverviewWindow.GetRightSideLeaderItem]"
									datacontext = "[WarParticipantItem.GetCharacter]"
								}

								text_single = {
									
									layoutpolicy_horizontal = expanding
									text = "[WarOverviewWindow.GetRightSideHeader]"
									#text = "[Character.GetNameNoTooltip]"
									default_format = "#high"
									using = Font_Size_Big
									align = center
									autoresize = no
									fontsize_min = 14
									max_width = 185
								}

								expand = {}
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								background = {
									using = Background_Area_Dark
								}

								widget = {
									size = { 55 60 }

									icon = {
										parentanchor = right|vcenter
										name = "icon_strength_balance"
										datacontext = "[WarOverviewWindow.GetMilitaryStrengthInfo]"
										texture = "gfx/interface/icons/icon_strength_balance.dds"
										size = { 60 60 }
										framesize = { 60 60 }

										frame = "[GuiMilitaryStrength.GetFrame]"

										tooltip = "[GuiMilitaryStrength.GetRatioDescription]"
										using = tooltip_se
									}
								}

								vbox = {
									layoutpolicy_horizontal = expanding

									text_single = {
										text = "WAR_OVERVIEW_TOTAL_SOLDIERS"
										layoutpolicy_horizontal = expanding
										align = left
										autoresize = no
										margin_left = 7
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										soldiers_and_quality_small = {
											datacontext = "[WarOverviewWindow.GetRightSideComposition]"
										}
										expand = {}
									}
								}
							}
						}
					}

					expand = {}
				}
			}
		}

		widget = {
			name = "center"
			size = { 622 0 }
			allow_outside = yes
			parentanchor = bottom|hcenter
			minimumsize = { 600 315 }

			state = {
				name = "war_overview_show"
				next = b
				position_y = 300
				alpha = 0
			}

			state = {
				name = "b"
				next = "c"
				duration = 0.3
				using = Animation_Curve_Default

				position_y = -5
				alpha = 1
			}

			state = {
				name = "c"
				duration = 0.05
				using = Animation_Curve_Default

				position_y = 0
				alpha = 1
			}

			state = {
				name = "war_overview_hide"
				duration = 0.3
				using = Animation_Curve_Default

				position_y = 300
				alpha = 0
			}

			icon = {
				name = "dust_cloud_left"
				parentanchor = bottom|left
				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				size = { 180 180 }

				using = Color_Grey

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					name = "shimmer"
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					rotate_uv = 0
				}

				modify_texture = {
					name = "shimmer_2"
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				state = {
					name = "war_overview_show"
					next = d
					duration = 0.25

					delay = 0.1

					animation = {
						alpha = 1
						bezier = { 0 0 0.4 1 }
					}

					modify_texture = {
						name = "shimmer"
						translate_uv = { -5 0 }
						alpha = 1
						rotate_uv = 0
					}

					modify_texture = {
						name = "shimmer_2"
						translate_uv = { -5 0 }
						alpha = 0.5
					}

					position_x = 0
				}

				state = {
					name = d
					next = e

					duration = 0.5
					using = Animation_Curve_Default

					animation = {
						alpha = 0
						bezier = { 0.6 0 0.7 0.5 }
					}

					modify_texture = {
						name = "shimmer"
						translate_uv = { -4.3 0 }
						alpha = 1
						rotate_uv = 180
					}

					modify_texture = {
						name = "shimmer_2"
						translate_uv = { -4.3 0 }
						alpha = 0.3
					}


					position_x = -200
				}

				state = {
					name = e

					duration = 0.01

					animation = {
						alpha = 0
						bezier = { 0.6 0 0.7 0.5 }
					}

					modify_texture = {
						name = "shimmer"
						translate_uv = { -0.1 0 }
						alpha = 0
						rotate_uv = 360
					}

					modify_texture = {
						name = "shimmer_2"
						translate_uv = { 1 0 }
						alpha = 0
					}

					position_x = 0
				}
			}

			icon = {
				name = "dust_cloud_right"
				parentanchor = bottom|right

				texture = "gfx/interface/component_masks/mask_fade_circle.dds"
				size = { 180 180 }

				using = Color_Grey

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				modify_texture = {
					name = "shimmer"
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
					rotate_uv = 0
				}

				modify_texture = {
					name = "shimmer_2"
					texture = "gfx/interface/component_masks/mask_clouds.dds"
					blend_mode = alphamultiply
					spriteType = corneredTiled
				}

				state = {
					name = "war_overview_show"
					next = d
					duration = 0.25

					delay = 0.1

					animation = {
						alpha = 1
						bezier = { 0 0 0.4 1 }
					}

					modify_texture = {
						name = "shimmer"
						translate_uv = { -5 0 }
						alpha = 1
						rotate_uv = 0
					}

					modify_texture = {
						name = "shimmer_2"
						translate_uv = { -5 0 }
						alpha = 0.5
					}

					position_x = 0
				}

				state = {
					name = d
					next = e

					duration = 0.5
					using = Animation_Curve_Default

					animation = {
						alpha = 0
						bezier = { 0.6 0 0.7 0.5 }
					}

					modify_texture = {
						name = "shimmer"
						translate_uv = { -4.3 0 }
						alpha = 1
						rotate_uv = 180
					}

					modify_texture = {
						name = "shimmer_2"
						translate_uv = { -4.3 0 }
						alpha = 0.3
					}


					position_x = 200
				}

				state = {
					name = e

					duration = 0.01

					animation = {
						alpha = 0
						bezier = { 0.6 0 0.7 0.5 }
					}

					modify_texture = {
						name = "shimmer"
						translate_uv = { -0.1 0 }
						alpha = 0
						rotate_uv = 360
					}

					modify_texture = {
						name = "shimmer_2"
						translate_uv = { 1 0 }
						alpha = 0
					}

					position_x = 0
				}
			}

			icon = {
				texture = "gfx/interface/window_war/tile_frame_top_war_2.dds"
				spriteType = Corneredtiled
				spriteborder = { 100 0 }
				size = { 724 35 }
				parentanchor = top|hcenter
				position = { 0 50 }
			}

			background = {
				texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"
				spriteType = Corneredtiled
				spriteborder = { 18 0 }
				margin = { 18 0 }
				margin_top = -60
				texture_density = 2

				modify_texture = {
					texture = "gfx/interface/component_overlay/overlay_effect.dds"
					blend_mode = overlay
				}
			}

			widget = {
				parentanchor = bottom|hcenter

				background = {
					texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"
					spriteType = Corneredtiled
					spriteborder = { 18 0 }
					margin = { -3 0 }
					texture_density = 2

					modify_texture = {
						texture = "gfx/interface/component_overlay/overlay_effect.dds"
						blend_mode = overlay
					}
				}

				## TOP FRAMES ###
				icon = {
					visible = "[Not(WarOverviewWindow.IsGreatHolyWar)]"
					texture = "gfx/interface/window_war/tile_frame_top_war.dds"
					spriteType = Corneredtiled
					spriteborder = { 100 0 }
					size = { 728 22 }
					parentanchor = top|hcenter
					position = { 2 -14 }
				}

				icon = {
					name = "tile_frame_top_center_part"
					texture = "gfx/interface/window_war/tile_frame_top.dds"
					position = { 0 2 }
					texture_density = 2

					parentanchor = top|hcenter
					widgetanchor = bottom|hcenter
				}

				## GHW ###
				widget = {
					visible = "[WarOverviewWindow.IsGreatHolyWar]"
					size = { 630 80 }
					using = GHW_Decoration
					parentanchor = top|hcenter
					widgetanchor = bottom|hcenter
				}

				#### SIDEFRAMES ####
				### Right
				background = {
					texture = "gfx/interface/component_tiles/tile_frame_subwindow_01.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					margin = { 0 10 }

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
						rotate_uv = -180
					}
				}

				background = {
					texture = "gfx/interface/component_tiles/tile_frame_subwindow_01.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					margin = { 3 10 }
					mirror = horizontal

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
					}
				}

				### Left
				background = {
					#texture = "gfx/interface/component_tiles/tile_frame_subwindow_01.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					margin = { 0 10 }
					mirror = horizontal

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
						rotate_uv = -180
					}
				}

				background = {
					texture = "gfx/interface/component_tiles/tile_frame_subwindow_01.dds"
					spriteType = Corneredtiled
					spriteborder = { 20 20 }
					margin = { 3 10 }

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
					}
				}

				vbox = {
					set_parent_size_to_minimum = yes
					minimumsize = { 620 0 }
					margin = { 10 0 }

					vbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							name = "header_bar"
							layoutpolicy_horizontal = expanding
							margin_bottom = 5

							background = {
								texture = "gfx/interface/component_tiles/tile_background_window_header.dds"
								spriteType = Corneredtiled
								spriteborder = { 20 20 }
								margin = { 5 0 }
								margin_top = 3
								margin_bottom = 13
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								expand = {
									layoutpolicy_horizontal = expanding
									layoutstretchfactor_horizontal = 1
								}

								text_single = {
									text = "[WarOverviewWindow.GetWar.GetName]"
									using = Font_Type_Flavor
									using = Font_Size_Big
									default_format = "#high"
									align = nobaseline
									max_width = 500
								}


								hbox = {
									layoutpolicy_horizontal = expanding
									layoutstretchfactor_horizontal = 1

									expand = {}

									buttons_window_control = {
										blockoverride "button_close"
										{
											onclick = "[ExecuteConsoleCommand('effect peace_reset_list')]"
											onclick = "[WarOverviewWindow.Close]"
										}
									}
								}

								watch_window_button = {
									size = { 60 40 }
									onclick = "[AddWatchWindow( WarOverviewWindow.GetWar.MakeScope )]"
								}
							}

							hbox = {
								margin = { 15 0 }
								spacing = 5

								text_single = {
									name = "start_date"
									text = "WAR_OVERVIEW_STARTED"
									using = Font_Size_Small
									align = nobaseline
									default_format = "#weak"
								}

								icon = {
									name = "cb_icon"
									texture = "[WarOverviewWindow.GetWar.GetActiveCB.GetType.GetIcon]"
									size = { 25 25 }
									tooltip = "[WarOverviewWindow.GetWar.GetActiveCB.GetType.GetName]"
								}
							}
						}

						spacer = {
							size = { 0 15 }
						}

						vbox = {
							name = "tutorial_highlight_war_score_details"
							layoutpolicy_horizontal = expanding
							margin = { 0 5 }

							background = {
								using = Background_Area_Dark
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								tooltip = "[WarOverviewWindow.GetWarScoreTooltip]"
								margin = { 0 5 }
								spacing = 3

								hbox = {
									layoutpolicy_horizontal = expanding
									margin = { 25 0 }
									spacing = 10

									text_single = {
										name = "warscore_header"
										text = "[war_score|E]"
										using = Font_Size_Big
										align = nobaseline
									}

									text_single = {
										name = "warscore"
										#text = "[WarOverviewWindow.GetWarScoreTooltip]"
										text = "[GetPlayer.MakeScope.Var('mcss').GetValue|0]%"
										using = Font_Size_Big
										align = nobaseline
									}

									expand = {}

									hbox = {
										name = "category_icons"
										margin = { 15 0 }
										spacing = 10

										# Objectives
										hbox = {
											spacing = 3
											tooltip = "[WarOverviewWindow.GetTickingWarScoreTooltip]"
											tooltip_offset = { 0 50 }

											icon = {
												name = "icon_a"
												size = { 30 30 }
												texture = "gfx/interface/icons/war_score/icon_war_score_objectives.dds"
											}

											text_single = {
												name = "ticking_warscore"
												min_width = 30
												align = nobaseline
												text = "[WarOverviewWindow.GetTickingWarScore]"
											}
										}

										# Battles
										hbox = {
											spacing = 3
											tooltip = "[WarOverviewWindow.GetBattlesWarScoreTooltip]"
											tooltip_offset = { 0 50 }

											icon = {
												name = "icon_b"

												size = { 30 30 }
												texture = "gfx/interface/icons/war_score/icon_war_score_battles.dds"
											}

											text_single = {
												name = "battles_warscore"
												min_width = 30
												align = nobaseline
												text = "[GetPlayer.MakeScope.Var('ex_batl').GetValue|0]%"
											}

											text_single = {
												name = "battles_warscore_capped"
												visible = "[WarOverviewWindow.IsBattlesWarScoreCapped]"
												align = nobaseline
												text = "BATTLES_WAR_SCORE_CAPPED"
												default_format = "#N"
											}
										}

										# Occupation
										hbox = {
											spacing = 3
											tooltip = "[WarOverviewWindow.GetOccupationWarScoreTooltip]"
											tooltip_offset = { 0 50 }

											icon = {
												name = "icon_c"
												size = { 30 30 }
												texture = "gfx/interface/icons/icon_holding_castle.dds"
											}
											text_single = {
												name = "occupation_warscore"
												min_width = 30
												align = nobaseline
												text = "[GetPlayer.MakeScope.Var('ex_occu').GetValue|0]%"
											}
										}

										# Prisoners
										hbox = {
											spacing = 3
											tooltip = "[WarOverviewWindow.GetImprisonmentWarScoreTooltip]"
											tooltip_offset = { 0 50 }

											icon = {
												name = "icon_d"
												size = { 30 30 }
												texture = "gfx/interface/icons/war_score/icon_war_score_prisoners.dds"
											}

											text_single = {
												name = "prisoners_warscore"
												min_width = 30
												align = nobaseline
												text =  "[GetPlayer.MakeScope.Var('ex_impr').GetValue|0]%"
											}
										}
									}
								}

								hbox = {
									name = "score_progress"
									margin = { 0 4 }
									# margin_top = 4
									spacing = 15

									text_single = {
										name = "max_warscore"
										align = right|nobaseline
										text = "-100"
										using = Font_Size_Medium
										default_format = "#low"
									}

									#### PROGRESSBAR ###
									widget = {
										size = { 450 20 }

										widget = {
											size = { 100% 100% }
											scissor = yes

											hbox = {

												#### LEFT ####
												widget = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding
													layoutstretchfactor_horizontal = "[GetProgressBarValueMax( WarOverviewWindow.GetProgressbarWarScore, '(float)100' )]"

													icon = {
														size = { 100% 100% }
														texture = "gfx/interface/progressbars/war_progress_blue.dds"
														spriteType = Corneredtiled

														modify_texture = {
															name = overlay
															texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
															blend_mode = mask
														}

														modify_texture = {
															name = "flash"
															texture = "gfx/interface/colors/gold.dds"
															alpha = 0
														}

														state = {
															trigger_on_create = yes
															name = war_overview_show
															next = a
															delay = 0.5
															duration = 0.0
															using = Animation_Curve_Default

															modify_texture = {
																name = overlay
																translate_uv = { 1 0 }
															}

															modify_texture = {
																name = "flash"
																alpha = 0.1
															}
														}

														state = {
															name = a
															duration = 0.75
															bezier = { 0.5 0.1 1 1}
															using = Animation_Curve_Default

															modify_texture = {
																name = overlay
																translate_uv = { -1 0 }
															}

															modify_texture = {
																name = "flash"
																alpha = 0.4
															}
														}
													}

													### GHW BAR ###
													icon = {
														visible = "[WarOverviewWindow.IsGreatHolyWar]"
														size = { 100% 100% }
														texture = "gfx/interface/progressbars/war_progress_ghw.dds"
														spriteType = Corneredtiled

														modify_texture = {
															name = overlay
															texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
															blend_mode = mask
														}

														modify_texture = {
															name = "flash"
															texture = "gfx/interface/colors/gold.dds"
															alpha = 0
														}

														state = {
															trigger_on_create = yes
															name = war_overview_show
															next = a
															delay = 0.5
															duration = 0.0
															using = Animation_Curve_Default

															modify_texture = {
																name = overlay
																translate_uv = { 1 0 }
															}

															modify_texture = {
																name = "flash"
																alpha = 0.1
															}
														}

														state = {
															name = a
															duration = 0.75
															bezier = { 0.5 0.1 1 1}
															using = Animation_Curve_Default

															modify_texture = {
																name = overlay
																translate_uv = { -1 0 }
															}

															modify_texture = {
																name = "flash"
																alpha = 0.4
															}
														}
													}

													icon = {
														visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)50' )]"
														using = Animation_ShowHide_Standard
														parentanchor = right|vcenter
														position = { 5 0 }

														size = { 20 100% }
														texture = "gfx/interface/progressbars/progressbar_center_glow.dds"

														state = {
															name = a
															next = b
															trigger_on_create = yes
															duration = 0.1
															alpha = 1
														}

														state = {
															name = b
															next = a
															duration = 0.2
															alpha = 0.9
														}
													}

													icon = {
														visible = "[GreaterThanOrEqualTo_float( WarOverviewWindow.GetProgressbarWarScore, '(float)50' )]"
														using = Animation_ShowHide_Standard
														parentanchor = right|vcenter
														position = { 20 0 }

														size = { 80 100% }
														texture = "gfx/interface/progressbars/progressbar_center_glow.dds"

														state = {
															name = a
															next = b
															trigger_on_create = yes
															duration = 0.1
															alpha = 1
														}

														state = {
															name = b
															next = a
															duration = 0.2
															alpha = 0.9
														}
													}

													### EFFECTS ###
													widget = {
														visible = "[GreaterThanOrEqualTo_float( WarOverviewWindow.GetProgressbarWarScore, '(float)50' )]"
														size = { 100% 100% }

														widget = {
															size = { 100% 100% }
															scissor = yes

															icon = {
																parentanchor = right
																size = { 160 100% }
																texture = "gfx/interface/colors/white.dds"
																shaderfile = "gfx/FX/repeat_texture.shader"
																alpha = 0.4

																using = Color_Bright_Yellow

																modify_texture = {
																	texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
																	blend_mode = alphamultiply
																}

																modify_texture = {
																	name = "clouds"
																	texture = "gfx/interface/component_masks/mask_clouds.dds"
																	blend_mode = alphamultiply
																	spriteType = corneredtiled
																	texture_density = 2
																}

																state = {
																	name = a
																	next = b
																	trigger_on_create = yes

																	modify_texture = {
																		name = "clouds"
																		translate_uv = { -1 0 }
																	}
																}

																state = {
																	name = b
																	next = a
																	duration = 4

																	modify_texture = {
																		name = "clouds"
																		translate_uv = { 1 0 }
																	}
																}
															}
														}
													}
												}

												#### RIGHT ####
												widget = {
													layoutpolicy_horizontal = expanding
													layoutpolicy_vertical = expanding
													layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOther( WarOverviewWindow.GetProgressbarWarScore, '(float)100' )]"

													icon = {
														size = { 100% 100% }
														texture = "gfx/interface/progressbars/war_progress_red.dds"
														spriteType = Corneredtiled

														modify_texture = {
															name = overlay
															texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_solid.dds"
															blend_mode = mask
														}

														modify_texture = {
															name = "flash"
															texture = "gfx/interface/colors/gold.dds"
															alpha = 0
														}

														state = {
															trigger_on_create = yes
															name = war_overview_show
															next = a
															delay = 0.5
															duration = 0.0
															using = Animation_Curve_Default

															modify_texture = {
																name = overlay
																translate_uv = { -1 0 }
															}

															modify_texture = {
																name = "flash"
																alpha = 0.1
															}
														}

														state = {
															name = a
															duration = 0.75
															bezier = { 0.5 0.1 1 1}

															modify_texture = {
																name = overlay
																translate_uv = { 1 0 }
															}

															modify_texture = {
																name = "flash"
																alpha = 0.4
															}
														}
													}

													### EFFECTS ###
													icon = {
														visible = "[GreaterThanOrEqualTo_float( WarOverviewWindow.GetProgressbarWarScore, '(float)50' )]"
														using = Animation_ShowHide_Standard
														parentanchor = left|vcenter
														position = { -5 0 }
														mirror = horizontal

														size = { 20 100% }
														texture = "gfx/interface/progressbars/progressbar_center_glow.dds"

														state = {
															name = a
															next = b
															trigger_on_create = yes
															duration = 0.1
															alpha = 1
														}

														state = {
															name = b
															next = a
															duration = 0.2
															alpha = 0.9
														}
													}

													icon = {
														visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)50' )]"
														using = Animation_ShowHide_Standard
														parentanchor = left|vcenter
														position = { -20 0 }
														mirror = horizontal

														size = { 80 100% }
														texture = "gfx/interface/progressbars/progressbar_center_glow.dds"

														state = {
															name = a
															next = b
															trigger_on_create = yes
															duration = 0.1
															alpha = 1
														}

														state = {
															name = b
															next = a
															duration = 0.2
															alpha = 0.9
														}
													}

													widget = {
														visible = "[LessThan_float( WarOverviewWindow.GetProgressbarWarScore, '(float)50' )]"
														using = Animation_ShowHide_Standard
														size = { 100% 100% }

														widget = {
															size = { 100% 100% }
															scissor = yes

															icon = {
																parentanchor = left
																mirror = horizontal

																size = { 160 100% }
																texture = "gfx/interface/colors/white.dds"
																shaderfile = "gfx/FX/repeat_texture.shader"
																alpha = 0.4

																using = Color_Bright_Yellow

																modify_texture = {
																	texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
																	blend_mode = alphamultiply
																}

																modify_texture = {
																	name = "clouds"
																	texture = "gfx/interface/component_masks/mask_clouds.dds"
																	blend_mode = alphamultiply
																	spriteType = corneredtiled
																	texture_density = 2
																}

																state = {
																	name = a
																	next = b
																	trigger_on_create = yes

																	modify_texture = {
																		name = "clouds"
																		translate_uv = { -1 0 }
																	}
																}

																state = {
																	name = b
																	next = a
																	duration = 4

																	modify_texture = {
																		name = "clouds"
																		translate_uv = { 1 0 }
																	}
																}
															}
														}
													}
												}
											}
										}

										widget = {
											name = "power_bar_frame"
											parentanchor = top
											size = { 100% 100% }
											alwaystransparent = yes

											background = {
												texture = "gfx/interface/progressbars/progress_frame_war.dds"
												spriteType = Corneredstretched
												spriteborder = { 10 10 }
												margin = { 5 4 }
											}
										}
									}

									text_single = {
										name = "min_warscore"
										align = nobaseline
										text = "+100"
										using = Font_Size_Medium
										default_format = "#low"
									}
								}
							}
						}


						hbox = {
							layoutpolicy_horizontal = expanding
							margin = { 10 0 }
							spacing = 12

							background = {
								using = Background_Area
							}

							### MY CONTRIBUTION
							vbox = {
								layoutpolicy_horizontal = expanding
								datacontext = "[WarOverviewWindow.GetPlayerParticipantItem]"
								visible = "[WarParticipantItem.ShowContribution]"
								visible_at_creation = no
								margin = { 0 5 }

								text_single = {
									text = "WAR_OVERVIEW_MY_CONTRIBUTION"
								}

								hbox = {
									layoutpolicy_horizontal = expanding

									text_single = {
										align = center
										text = "[WarParticipantItem.GetContribution]"
									}

									text_single = {
										align = center
										text = "[WarParticipantItem.GetContributionPercentage|%]"
									}

									text_single = {
										visible = "[And( WarOverviewWindow.ShowContributionRank, EqualTo_int32( WarOverviewWindow.GetContributionRank(GetPlayer), '(int32)0' ) )]"
										align = center
										text = "WAR_OVERVIEW_CONTRIBUTION_NO_RANK"
									}

									text_single = {
										visible = "[And( WarOverviewWindow.ShowContributionRank, GreaterThan_int32( WarOverviewWindow.GetContributionRank(GetPlayer), '(int32)0' ) )]"
										align = center
										text = "WAR_OVERVIEW_CONTRIBUTION_RANK"
									}
								}

								tooltip = "[WarParticipantItem.GetContributionTooltip]"
							}

							divider_light = {
								layoutpolicy_vertical = expanding
								visible = "[WarOverviewWindow.ShowBeneficiary]"
								visible_at_creation = no

							}

							hbox = {
								name = "ghw_info"
								layoutpolicy_horizontal = expanding
								visible = "[WarOverviewWindow.ShowBeneficiary]"
								visible_at_creation = no

								margin = { 0 5 }

								vbox = {
									layoutpolicy_horizontal = expanding

									text_single = {
										name = "beneficiary"
										layoutpolicy_horizontal = expanding
										align = left
										text = "WAR_OVERVIEW_BENEFICIARY"
									}

									text_single = {
										name = "beneficiary_name"
										layoutpolicy_horizontal = expanding
										align = left
										text = "[WarOverviewWindow.GetBeneficiaryName]"
									}
								}

								button_round = {
									name = "change_beneficiary"
									alwaystransparent = no

									button_replace = {
										onclick = "[OpenCharacterInteraction( 'select_ghw_beneficiary_interaction', GetPlayer )]"
										parentanchor = center
									}

									tooltip = "SELECT_GHW_BENEFICIARY"
								}
							}
						}
					}

					spacer = {
						size = { 10 10 }
					}

					#### WAR END TERMS ###
					widget = {
						visible = "[WarOverviewWindow.IsPeaceTermsOpen]"
						visible_at_creation = no
						layoutpolicy_horizontal = expanding
						#size = { 0 350 }
						scissor = yes
						background = {
							texture = "gfx/interface/icons/eu/background.dds"
						}
						#findshow
						state = {
							name = _show
							duration = 0.1
							using = Animation_Curve_Default
							on_start = "[GetScriptedGui('enemy_lands').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[GetScriptedGui('my_landia').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[GetScriptedGui('my_claim').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[GetScriptedGui('enemy_claims').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[GetScriptedGui('enemy_vassals').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[GetScriptedGui('my_vassals').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[ExecuteConsoleCommand('effect heres_the_deal')]"
							on_start = "[GetVariableSystem.Toggle( 'view_offer' )]"
							#on_start = "[ExecuteConsoleCommand(Concatenate('effect add_ex_occu = { cal =',Concatenate(WarOverviewWindow.GetOccupationWarScore,' }')))]"
							#on_start = "[ExecuteConsoleCommand(Concatenate('effect add_ex_impr = { tal =',Concatenate(WarOverviewWindow.GetImprisonmentWarScore,' }')))]"
							on_start = "[ExecuteConsoleCommand(Concatenate('effect add_ex_impr = { tal =',Concatenate(WarOverviewWindow.GetImprisonmentWarScore,Concatenate(' cal =',Concatenate(WarOverviewWindow.GetOccupationWarScore,Concatenate(' dal = ',Concatenate(WarOverviewWindow.GetBattlesWarScore,' }')))))))]"
							#on_start = "[ExecuteConsoleCommand(Concatenate('effect add_ex_impr = { tal =',Concatenate(WarOverviewWindow.GetImprisonmentWarScore,Concatenate(' cal = ',WarOverviewWindow.GetOccupationWarScore,Concatenate(' dal = ',Concatenate(WarOverviewWindow.GetOccupationWarScore,' }')))))))]"
							# effect add_ex_impr = { tal = 5 cal = 5 }
							#WarOverviewWindow.GetBattlesWarScore
							alpha = 1
							size = { 0 750}
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_standard_show"
							}
						}

						state = {
							name = _hide
							duration = 0.3
							using = Animation_Curve_Default
							on_start = "[GetScriptedGui('rem_my_enemy').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							on_start = "[ExecuteConsoleCommand('effect peace_reset_list')]"
							on_start = "[GetVariableSystem.Clear( 'view_offer')]"
							on_start = "[GetVariableSystem.Clear( 'trait1' )]"
							on_start = "[GetVariableSystem.Clear( 'trait2' )]"
							alpha = 0
							size = { 0 0 }
							start_sound = {
								soundeffect = "event:/SFX/UI/Generic/Windows/sfx_ui_generic_window_standard_hide"
							}
						}
						#Backdrops							
						icon = {
								position = { 0 70 }
								size = { 590 260 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
						}
						icon = {
								position = { 10 80 }
								size = { 570 250 }
								texture = "gfx/interface/icons/eu/backboard.dds"
						}
					###############
					# Your Lands				
							scrollbox = {
								name = "titles_list"
								background = {
								#position = { 10 80 }
								size = { 580 250 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
								}
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								size = { 290 250 }
								position = { 10 80 }
								visible = "[GetVariableSystem.Exists( 'give_domain')]"
								blockoverride "scrollbox_content" {
								vbox_list_interaction_title_selection = {
									name = "titles_grid"
									datamodel = "[GetPlayer.MakeScope.GetList('my_lands')]"
									spacing = 3
									
									item = {

										button_standard = {
											name = "title_button"
											layoutpolicy_horizontal = expanding
											size = { 0 50 }
											datacontext = "[Scope.GetLandedTitle.GetTitle]"
											onclick = "[GetScriptedGui('add_domain_give').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Scope.GetLandedTitle.MakeScope ).End )]"
											onclick = "[GetScriptedGui('title_select').Execute( GuiScope.SetRoot( Scope.GetLandedTitle.MakeScope ).End )]"
											down = "[EqualTo_string(Scope.GetLandedTitle.MakeScope.Var('is_selected').GetFlagName, 'selected')]"

										
											tooltip = "[Scope.GetLandedTitle.GetTooltip]"
											using = tooltip_es
											
				
											coa_title_tiny_crown = {
												datacontext = "[Scope.GetLandedTitle]"
												parentanchor = vcenter
												position = {5 -1 }
											}

											icon = {
												name = "pressed_claim"
												visible = "[GetPlayer.HasPressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
												#visible = "[EqualTo_string(Scope.GetLandedTitle.GetFlagName, GetPlayer.MakeScope.Var(Scope.GetLandedTitle).Scope.GetLandedTitle.GetFlagName)]"
												size = { 24 24 }
												texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
												tooltip = "REVOKE_TITLE_PRESSED_CLAIM"
											}

											hbox = {
												margin_left = 45
												margin_right = 5
												#visible = "[Scope.GetLandedTitle.IsSelected]"
												text_single = {
													name = "text"
													layoutpolicy_horizontal = expanding
													text = "[Scope.GetLandedTitle.GetNameNoTooltip]"
												}

												icon = {
													name = "pressed_claim"
													visible = "[GetPlayer.HasPressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
													tooltip = "REVOKE_TITLE_PRESSED_CLAIM"
												}

												icon = {
													name = "unpressed_claim"
													visible = "[GetPlayer.HasUnpressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_unpressed.dds"
													tooltip = "REVOKE_TITLE_UNPRESSED_CLAIM"
												}

												icon = {
													name = "leased_out"
													visible = "[Scope.GetLandedTitle.HasLeasedOutVassal]"
													size = { 36 39 }
													texture = "gfx/interface/icons/icon_holding_church.dds"
													tooltip = "GRANT_TITLE_LEASED_OUT_VASSAL"
												}

												block "extra_title_items" {}
											}

											}
			
									}
								}
								}
							}
					###############
					# Your Claims
							scrollbox = {
								
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								size = { 290 250 }
								position = { 10 80 }
								background = {
								#position = { 10 80 }
								size = { 580 250 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
								}
								visible = "[GetVariableSystem.Exists( 'give_claim')]"
								blockoverride "scrollbox_empty"
									{
										visible = "[Not(GrantTitlesInteractionWindow.HasTitles)]"
										text = "No Claims Available"
									}
								blockoverride "scrollbox_content" {
								vbox_list_interaction_title_selection = {
	
									datamodel = "[GetPlayer.MakeScope.GetList('my_claims')]"
									layoutpolicy_horizontal = expanding
									spacing = 3

									item = {
										
										button_standard = {
											name = "title_button"
											layoutpolicy_horizontal = expanding
											size = { 0 50 }
											
											#size = "[Scope.GetLandedTitle.GetSize]"
											onclick = "[GetScriptedGui('add_claim_give').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Scope.GetLandedTitle.MakeScope ).End )]"
											onclick = "[GetScriptedGui('title_select').Execute( GuiScope.SetRoot( Scope.GetLandedTitle.MakeScope ).End )]"
											down = "[EqualTo_string(Scope.GetLandedTitle.MakeScope.Var('is_selected').GetFlagName, 'selected')]"
				
											button_ignore = none
							
											tooltip = "[Scope.GetLandedTitle.GetTooltip]"
											using = tooltip_es

												
											hbox = {
												margin_left = 45
												margin_right = 5

												text_single = {
													name = "text"
													layoutpolicy_horizontal = expanding
													text = "[Scope.GetLandedTitle.GetNameNoTooltip]"
												}

												icon = {
													name = "pressed_claim"
													visible = "[GetPlayer.HasPressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
													tooltip = "REVOKE_TITLE_PRESSED_CLAIM"
												}

												icon = {
													name = "unpressed_claim"
													visible = "[GetPlayer.HasUnpressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_unpressed.dds"
													tooltip = "REVOKE_TITLE_UNPRESSED_CLAIM"
												}

												icon = {
													name = "leased_out"
													visible = "[GetLandedTitle.HasLeasedOutVassal]"
													size = { 36 39 }
													texture = "gfx/interface/icons/icon_holding_church.dds"
													tooltip = "GRANT_TITLE_LEASED_OUT_VASSAL"
												}

												block "extra_title_items" {}
											}

											coa_title_tiny_crown = {
											datacontext = "[Scope.GetLandedTitle]"
											parentanchor = vcenter
											position = {5 -1 }
											}
										}


									}
								}
								}
							}
					###############
					# Your Vassals
							scrollbox = {
								
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								size = { 580 250 }
								position = { 10 80 }
								background = {
								#position = { 10 80 }
								size = { 580 250 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
								}
								visible = "[GetVariableSystem.Exists( 'give_vassal')]"
								blockoverride "scrollbox_content" {
									vbox_list_interaction_title_selection = {
		
										datamodel = "[GetPlayer.MakeScope.GetList('your_vassals')]"
										
										layoutpolicy_horizontal = expanding
										spacing = 3

									item = {
										
										button_standard = {
											name = "vassal_button"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											size = { 0 80 }
											datacontext = "[Scope.GetCharacter]"
											onclick = "[GetScriptedGui('add_vassal_give').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Scope.GetCharacter.MakeScope ).End )]"
											onclick = "[GetScriptedGui('char_select').Execute( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).End )]"
											down = "[EqualTo_string(Scope.GetCharacter.MakeScope.Var('is_selected').GetFlagName, 'selected')]"
						
											button_ignore = none
					
											tooltip = "[Scope.GetCharacter.GetTooltip]"
											using = tooltip_es

												text_single = {
													name = "text"
													layoutpolicy_horizontal = expanding
													text = "[Character.GetNameNoTooltip]"
													position = { 90 0 }
													#parentanchor = vcenter
												}

			
												portrait_head_small = {
													parentanchor = vcenter
													#parentanchor = hleft
													size = { 50 50 }
													position = {15 15 }
												}

										}


									}
							
									}
								}
							}
					###############
					# Your Treaties
							icon = {
								
								#layoutpolicy_horizontal = expanding
								#layoutpolicy_vertical = expanding
								size = { 580 250 }
								position = { 10 80 }
									background = {
										size = { 580 250 }
										texture = "gfx/interface/icons/eu/backboard2.dds"
									}
								visible = "[GetVariableSystem.Exists( 'mytreaty')]"

								button = {
									position = { 10 0 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_surrender').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/surrender.dds"
									onclick = "[GetScriptedGui('tr_surrender').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_surrender').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								
									text_single = {
										text = PM_SUR
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 10 60 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_humiliation').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/humiliate.dds"
									onclick = "[GetScriptedGui('tr_humiliation').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_humiliation').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_HUMI
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 10 120 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_conversion').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/deficon.dds"
									onclick = "[GetScriptedGui('tr_conversion').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_conversion').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_CON
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 10 180 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_marriage').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/marriage.dds"
									onclick = "[GetScriptedGui('tr_marriage').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_marriage').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_PTM
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 0 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_vassalize').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/vassalize.dds"
									onclick = "[GetScriptedGui('tr_vassalize').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_vassalize').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_VASSAL
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 60 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_shook').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/shook.dds"
									onclick = "[GetScriptedGui('tr_shook').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_shook').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_SHOOK
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 120 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_whook').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/whook.dds"
									onclick = "[GetScriptedGui('tr_whook').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_whook').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_WHOOK
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 180 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_death').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/death.dds"
									onclick = "[GetScriptedGui('tr_death').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_death').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_SUICIDE
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 390 0 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_warrep').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/warrep.dds"
									onclick = "[GetScriptedGui('tr_warrep').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_warrep').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_WARREP
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 390 60 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_decimation').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/deci.dds"
									onclick = "[GetScriptedGui('tr_decimation').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_decimation').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_DECI
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 390 120 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_sacrifice').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/sacrifice.dds"
									onclick = "[GetScriptedGui('tr_sacrifice').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_sacrifice').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_SAC
										parentanchor = vcenter
										position = { 60 0 }
									}
								}

								button = {
									position = { 390 180 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tr_inquis').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/inquis.dds"
									onclick = "[GetScriptedGui('tr_inquis').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tr_inquis').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_INQUIS
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
							}

							#####################
							#enemy start

							scrollbox = {
								
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								size = { 290 250 }
								position = { 300 80 }
								background = {
								#position = { 10 80 }
								size = { 580 250 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
								}
								visible = "[GetVariableSystem.Exists( 'take_domain')]"
								blockoverride "scrollbox_content" {
								vbox_list_interaction_title_selection = {
	
									datamodel = "[GetPlayer.MakeScope.GetList('enemys_land')]"
									layoutpolicy_horizontal = expanding
									spacing = 3

									item = {
										
										button_standard = {
											name = "title_button"
											layoutpolicy_horizontal = expanding
											size = { 0 50 }
											
											#size = "[Scope.GetLandedTitle.GetSize]"
											onclick = "[GetScriptedGui('add_domain_take').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Scope.GetLandedTitle.MakeScope ).End )]"
											onclick = "[GetScriptedGui('title_select').Execute( GuiScope.SetRoot( Scope.GetLandedTitle.MakeScope ).End )]"
											down = "[EqualTo_string(Scope.GetLandedTitle.MakeScope.Var('is_selected').GetFlagName, 'selected')]"
							
											button_ignore = none
											tooltip = "[Scope.GetLandedTitle.GetTooltip]"
											using = tooltip_es

											hbox = {
												margin_left = 45
												margin_right = 5

												text_single = {
													name = "text"
													layoutpolicy_horizontal = expanding
													text = "[Scope.GetLandedTitle.GetNameNoTooltip]"
												}

												icon = {
													name = "pressed_claim"
													visible = "[GetPlayer.HasPressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
													tooltip = "REVOKE_TITLE_PRESSED_CLAIM"
												}

												icon = {
													name = "unpressed_claim"
													visible = "[GetPlayer.HasUnpressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_unpressed.dds"
													tooltip = "REVOKE_TITLE_UNPRESSED_CLAIM"
												}

												icon = {
													name = "leased_out"
													visible = "[Scope.GetLandedTitle.HasLeasedOutVassal]"
													size = { 36 39 }
													texture = "gfx/interface/icons/icon_holding_church.dds"
													tooltip = "GRANT_TITLE_LEASED_OUT_VASSAL"
												}

												block "extra_title_items" {}
											}

											coa_title_tiny_crown = {
											datacontext = "[Scope.GetLandedTitle]"
											parentanchor = vcenter
											position = {5 -1 }
											}
										}


									}
								}
								}
							}
							#eclaim

							scrollbox = {
								
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								size = { 290 250 }
								position = { 300 80 }
								background = {
								#position = { 10 80 }
								size = { 580 250 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
								}
								visible = "[GetVariableSystem.Exists( 'take_claim')]"
								blockoverride "scrollbox_empty"
									{
										visible = "[Not(GrantTitlesInteractionWindow.HasTitles)]"
										text = "No Claims Available"
									}
								blockoverride "scrollbox_content" {
								vbox_list_interaction_title_selection = {
	
									datamodel = "[GetPlayer.MakeScope.GetList('enemys_claim')]"
									layoutpolicy_horizontal = expanding
									spacing = 3

									item = {
										
										button_standard = {
											name = "title_button"
											layoutpolicy_horizontal = expanding
											size = { 0 50 }
											
											#size = "[Scope.GetLandedTitle.GetSize]"
											onclick = "[GetScriptedGui('add_claim_take').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Scope.GetLandedTitle.MakeScope ).End )]"
											onclick = "[GetScriptedGui('title_select').Execute( GuiScope.SetRoot( Scope.GetLandedTitle.MakeScope ).End )]"
											down = "[EqualTo_string(Scope.GetLandedTitle.MakeScope.Var('is_selected').GetFlagName, 'selected')]"
				
											button_ignore = none
				
											tooltip = "[Scope.GetLandedTitle.GetTooltip]"
											using = tooltip_es


											hbox = {
												margin_left = 45
												margin_right = 5

												text_single = {
													name = "text"
													layoutpolicy_horizontal = expanding
													text = "[Scope.GetLandedTitle.GetNameNoTooltip]"
												}

												icon = {
													name = "pressed_claim"
													visible = "[GetPlayer.HasPressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_pressed.dds"
													tooltip = "REVOKE_TITLE_PRESSED_CLAIM"
												}

												icon = {
													name = "unpressed_claim"
													visible = "[GetPlayer.HasUnpressedClaimOnTitle( Scope.GetLandedTitle.Self )]"
													size = { 24 24 }
													texture = "gfx/interface/icons/title_status/icon_claim_unpressed.dds"
													tooltip = "REVOKE_TITLE_UNPRESSED_CLAIM"
												}

												icon = {
													name = "leased_out"
													visible = "[GetLandedTitle.HasLeasedOutVassal]"
													size = { 36 39 }
													texture = "gfx/interface/icons/icon_holding_church.dds"
													tooltip = "GRANT_TITLE_LEASED_OUT_VASSAL"
												}

												block "extra_title_items" {}
											}

											coa_title_tiny_crown = {
											datacontext = "[Scope.GetLandedTitle]"
											parentanchor = vcenter
											position = {5 -1 }
											}
										}


									}
								}
								}
							}
							#evassal
							scrollbox = {
								
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								size = { 580 250 }
								position = { 10 80 }
								background = {
								#position = { 10 80 }
								size = { 580 250 }
								texture = "gfx/interface/icons/eu/backboard2.dds"
								}
								visible = "[GetVariableSystem.Exists( 'take_vassal')]"
								blockoverride "scrollbox_content" {
									vbox_list_interaction_title_selection = {
		
										datamodel = "[GetPlayer.MakeScope.GetList('enemys_vassal')]"
										
										layoutpolicy_horizontal = expanding
										spacing = 3

									item = {
										
										button_standard = {
											name = "vassal_button"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											size = { 0 80 }
											datacontext = "[Scope.GetCharacter]"
											#size = "[Scope.GetLandedTitle.GetSize]"
											onclick = "[GetScriptedGui('add_vassal_take').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Scope.GetCharacter.MakeScope ).End )]"
											onclick = "[GetScriptedGui('char_select').Execute( GuiScope.SetRoot( Scope.GetCharacter.MakeScope ).End )]"
											down = "[EqualTo_string(Scope.GetCharacter.MakeScope.Var('is_selected').GetFlagName, 'selected')]"
											button_ignore = none
			
											tooltip = "[Scope.GetCharacter.GetTooltip]"
											using = tooltip_es

												text_single = {
													name = "text"
													layoutpolicy_horizontal = expanding
													text = "[Character.GetNameNoTooltip]"
													position = { 90 0 }
													#parentanchor = vcenter
												}

			
												portrait_head_small = {
													parentanchor = vcenter
													#parentanchor = hleft
													size = { 50 50 }
													position = {15 15 }
												}

										}


									}
							
									}
								}
							}
					###############
					# Enemy Treaties
					############
							icon = {

								size = { 580 250 }
								position = { 10 80 }
									background = {
										size = { 580 250 }
										texture = "gfx/interface/icons/eu/backboard2.dds"
									}
								visible = "[GetVariableSystem.Exists( 'etreaty')]"

								button = {
									position = { 10 0 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_surrender').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/surrender.dds"
									onclick = "[GetScriptedGui('tre_surrender').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_surrender').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								
									text_single = {
										text = PM_SUR
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 10 60 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_humiliation').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/humiliate.dds"
									onclick = "[GetScriptedGui('tre_humiliation').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_humiliation').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_HUMI
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 10 120 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_conversion').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/deficon.dds"
									onclick = "[GetScriptedGui('tre_conversion').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_conversion').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_CON
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 10 180 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_marriage').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/marriage.dds"
									onclick = "[GetScriptedGui('tre_marriage').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_marriage').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_PTM
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 0 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_vassalize').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/vassalize.dds"
									onclick = "[GetScriptedGui('tre_vassalize').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_vassalize').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_VASSAL
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 60 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_shook').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/shook.dds"
									onclick = "[GetScriptedGui('tre_shook').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_shook').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_SHOOK
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 120 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_whook').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/whook.dds"
									onclick = "[GetScriptedGui('tre_whook').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_whook').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_WHOOK
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 200 180 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_death').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/death.dds"
									onclick = "[GetScriptedGui('tre_death').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_death').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_SUICIDE
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 390 0 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_warrep').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/warrep.dds"
									onclick = "[GetScriptedGui('tre_warrep').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_warrep').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_WARREP
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 390 60 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_decimation').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/deci.dds"
									onclick = "[GetScriptedGui('tre_decimation').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_decimation').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_DECI
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								button = {
									position = { 390 120 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_sacrifice').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/sacrifice.dds"
									onclick = "[GetScriptedGui('tre_sacrifice').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									enabled = "[GetScriptedGui('tre_sacrifice').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									text_single = {
										text = PM_SAC
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
								icon = {
									visible = "[GetVariableSystem.Exists('esi')]"
									position = { 0 400 }
									texture = "gfx/interface/icons/eu/spinq.dds"
									size = { 100% 100% }
								}
								button = {
									position = { 390 180 }
									size = { 50 50 }
									tooltip = "[GetScriptedGui('tre_inquis').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									texture = "gfx/interface/icons/eu/inquis.dds"
									onclick = "[GetScriptedGui('tre_inquis').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									onclick = "[GetVariableSystem.Toggle('esi')]"
									enabled = "[GetScriptedGui('tre_inquis').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									down = "[GetVariableSystem.Exists('esi')]"
									text_single = {
										text = PM_INQUIS
										parentanchor = vcenter
										position = { 60 0 }
									}
								}
							}
					###############
					# MAIN PM TABS
					###############
						button = {
								position = { 30 0 }
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'give_domain' )]"
								tooltip = "Give Domains"
								texture = "gfx/interface/icons/eu/domain.dds"
						}
						button = {
							position = { 90 0 }
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'give_claim' )]"
								tooltip = "Give Claims"
								texture = "gfx/interface/icons/eu/claim.dds"
						}
						button = {
							position = { 150 0 }
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'give_vassal' )]"
								tooltip = "Release Vassals"
								texture = "gfx/interface/icons/eu/rnat.dds"
						}
						button = {
								position = { 210 0 }
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'mytreaty' )]"
								tooltip = "Treaties"
								texture = "gfx/interface/icons/eu/treaty.dds"
						}
						#####
						#####
						button = {
							position = { 320 0 }
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'take_domain' )]"
								tooltip = "Take Domains"
								texture = "gfx/interface/icons/eu/domain_e.dds"
						}
						button = {
							position = { 380 0 }
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'take_claim' )]"
								tooltip = "Take Claims"
								texture = "gfx/interface/icons/eu/claim_e.dds"
						}
						button = {
							position = { 440 0 }
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Clear( 'etreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'take_vassal' )]"
								tooltip = "Take Vassals"
								texture = "gfx/interface/icons/eu/rnat_e.dds"
						}
						button = {
							position = { 500 0 }
								onclick = "[GetVariableSystem.Clear( 'give_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'give_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'give_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'take_claim' )]"
								onclick = "[GetVariableSystem.Clear( 'take_domain' )]"
								onclick = "[GetVariableSystem.Clear( 'take_vassal' )]"
								onclick = "[GetVariableSystem.Clear( 'mytreaty' )]"
								onclick = "[GetVariableSystem.Toggle( 'etreaty' )]"
								tooltip = "Treaties"
								texture = "gfx/interface/icons/eu/treaty_e.dds"
						}
					###############
					# END PM MAIN TABS
					################


						#bottomhalf

						button= {
							position = { 370 350 }
							onclick = "[GetVariableSystem.Toggle( 'view_offer' )]"
							tooltip = "Toggle Offers"
							#text = "Offers"
							size = { 35 35 }
							texture = "gfx/interface/icons/eu/offers.dds"
						}
						button= {
							parentanchor = right
							position = {0 430 }
							#onclick = "[GetVariableSystem.Toggle( 'view_offer' )]"
							tooltip = "Help Menu- Incomplete, if the screens are blank hit the reset offer button."
							#text = ""
							size = { 38 38 }
							texture = "gfx/interface/icons/eu/help.dds"
						}
					#############
					# Reset Deal
					############
						button = {
							position = { 374 385 }
							onclick = "[ExecuteConsoleCommand('effect peace_reset_list')]"
							onclick = "[GetScriptedGui('enemy_lands').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[GetScriptedGui('my_landia').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[GetScriptedGui('my_claim').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[GetScriptedGui('enemy_claims').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[GetScriptedGui('enemy_vassals').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							onclick = "[GetScriptedGui('my_vassals').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							texture = "gfx/interface/icons/eu/reset.dds"
							tooltip = "Reset Offer"
							size = { 26 26 }
							#text = "Reset"
						}

		
						icon = {
							allow_outside = yes
							
								position = { 0 355 }
								tooltip = "[GetScriptedGui('final_deal').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								size = { 120 52 }
								parentanchor = hcenter
								#visible = "[GetScriptedGui('deal_score').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								texture = "gfx/interface/icons/eu/score.dds"
								text_single = {
									name = "deal_check"
									text = "[GetPlayer.MakeScope.Var('the_deal').GetValue|0]"
									#text = "Will not accept!" #: [GetPlayer.MakeScope.Var('the_deal').GetValue|0]"
									default_format = "#high"
									using = Font_Size_Big
									fontsize_min = 8
									parentanchor = vcenter|hcenter
									position = { 0 -5 }
								}
								text_single = {
									text = "Deal Score"
									#text = "Will not accept!" #: [GetPlayer.MakeScope.Var('the_deal').GetValue|0]"
									visible = "[GetScriptedGui('deal_score').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									default_format = "#high"
									fontsize_min = 8
									parentanchor = vcenter|hcenter
									using = Font_Type_Flavor
									position = { 0 -38 }
								}
								text_single = {
									text = "Will Accept"
									visible = "[Not(GetScriptedGui('deal_score').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
									#text = "Will not accept!" #: [GetPlayer.MakeScope.Var('the_deal').GetValue|0]"
									default_format = "#high"
									fontsize_min = 8
									parentanchor = vcenter|hcenter
									using = Font_Type_Flavor
									position = { 0 -38 }
								}
								enabled = "[GetScriptedGui('deal_score').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						}
						button = {
								parentanchor = hcenter
								position = { 0 420 }
								onclick = "[GetScriptedGui('final_deal').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								tooltip = "[GetScriptedGui('final_deal').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								size = { 160 42 }
								#visible = "[GetScriptedGui('final_deal').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								texture = "gfx/interface/icons/eu/send.dds"
								text = "Send Offer"
								default_format = "#high"
								using = Font_Type_Flavor
								using = Font_Size_Big
								fontsize_min = 14
								enabled = "[GetScriptedGui('final_deal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								
						}
					#############
					# Your Gold
					#############
						button = {
							position = { 40 340 }
								onclick = "[ExecuteConsoleCommand('effect peace_add_gold')]"
								
							
								size = { 25 25 }
								texture = "gfx/interface/icons/eu/icon_add.dds"
								text = "                                Gold"
						}
						button = {
							position = { 40 364 }
								onclick = "[ExecuteConsoleCommand('effect peace_rem_gold')]"
								
								
								size = { 25 25 }
								texture = "gfx/interface/icons/eu/icon_sub.dds"
								#text = "                          [GetPlayer.MakeScope.Var('peace_val').GetValue|0]"

						}
							button = {
							position = { 80 364 }
								text = "[GetPlayer.MakeScope.Var('peace_val').GetValue|0]"
								onclick = "[ExecuteConsoleCommand('effect peace_reset_gold')]"
								size = { 80 25 }
								background = {
									#position = { 30 0 }
									using = Text_Label_Background
									margin = { 17 3 }
								}
						}
					#############
					# Enemy Gold
					#############
						button = {
							position = { 440 340 }
							onclick = "[ExecuteConsoleCommand('effect epeace_add_gold')]"
							size = { 25 25 }
							texture = "gfx/interface/icons/eu/icon_add.dds"
							text = "                                Gold"
						}
						button = {
							position = { 440 364 }
							onclick = "[ExecuteConsoleCommand('effect epeace_rem_gold')]"
							size = { 25 25 }
							texture = "gfx/interface/icons/eu/icon_sub.dds"
						}

						button = {
							position = { 480 364 }
							text = "[GetPlayer.MakeScope.Var('epeace_val').GetValue|0]"
							onclick = "[ExecuteConsoleCommand('effect epeace_reset_gold')]"
							size = { 80 25 }
							background = {
								using = Text_Label_Background
								margin = { 17 3 }
							}
						}
						button_standard = {

							position = { 45 430 }
							size = { 130 30 }

							text = "Casus Belli Terms"
							onclick = "[GetVariableSystem.Toggle( 'vanilla_offer' )]"
							#down = "[WarOverviewWindow.IsEffectsTabDefeat]"

						}
						button_standard = {
							name = "defeat_button"
							position = { 0 470 }
							size = { 200 50 }

							text = "TAB_DEFEAT"

							onclick = "[PdxGuiTriggerAllAnimations('war_end_terms_refresh')]"
							onclick = "[WarOverviewWindow.SetEffectsTabDefeat]"

							visible = "[GetVariableSystem.Exists( 'vanilla_offer' )]"
							#down = "[WarOverviewWindow.IsEffectsTabDefeat]"

							war_defeat = {
								alwaystransparent = yes
								parentanchor = left|vcenter
								position = { 10 0 }
							}
						}

						button_standard = {
							name = "white_peace_button"
							position = { 0 470 }
							size = { 200 50 }
							visible = "[And(WarOverviewWindow.GetWar.GetActiveCB.GetType.IsWhitePeacePossible, GetVariableSystem.Exists( 'vanilla_offer' ))]"
							#visible = "[WarOverviewWindow.GetWar.GetActiveCB.GetType.IsWhitePeacePossible]"
							parentanchor = hcenter
			
							text = "TAB_WHITE_PEACE"

							onclick = "[PdxGuiTriggerAllAnimations('war_end_terms_refresh')]"
							onclick = "[WarOverviewWindow.SetEffectsTabWhitePeace]"
							
							#down = "[WarOverviewWindow.IsEffectsTabWhitePeace]"

							war_peace = {
								alwaystransparent = yes
								parentanchor = left|vcenter
								position = { 10 0 }
							}
						}

						button_standard = {
							name = "victory_button"
							parentanchor = right
							size = { 200 50 }
							position = { 0  470 }
							text = "TAB_VICTORY"
							visible = "[GetVariableSystem.Exists( 'vanilla_offer' )]"
							onclick = "[PdxGuiTriggerAllAnimations('war_end_terms_refresh')]"
							onclick = "[WarOverviewWindow.SetEffectsTabVictory]"
							#down = "[WarOverviewWindow.IsEffectsTabVictory]"

							war_victory = {
								alwaystransparent = yes
								parentanchor = left|vcenter
								position = { 10 0 }
							}
						}
						scrollbox = {
								visible = "[Not(GetVariableSystem.Exists( 'vanilla_offer' ))]"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								position = { 0 480 }
								size = { 600 260 }
								blockoverride "scrollbox_content"
								{
									vbox = {
										name = "effects_deal"
										
										text_single = {
											name = "peace_deal_effect"
											autoresize = yes
											maximumsize = { 520 -1 }
											minimumsize = { 520 -1 }
											text = "[GetScriptedGui('final_deal').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											default_format = "#high"
											multiline = yes
										}
									}
								}
							}
					########################################
					#original
						vbox = {
							visible = "[GetVariableSystem.Exists( 'vanilla_offer' )]"
							margin = { 0 520 }

							vbox = {

								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin = { 15 15 }
								

								background = {
									using = Background_Tab_Area
									mirror = vertical
								}

								state = {
									name = "war_end_terms_refresh"
									next = "b"
									using = Animation_Refresh_FadeOut
								}

								state = {
									name = "b"
									using = Animation_Refresh_FadeIn
								}

								scrollbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									
									size = { 200 120 }
									blockoverride "scrollbox_content"
									{
										vbox = {
											name = "effects_text"
											

											text_single = {
												name = "main_end_war_effect"
												autoresize = yes
												maximumsize = { 520 -1 }
												minimumsize = { 520 -1 }
												text = "[WarOverviewWindow.GetCurrentTabMainOutputDescription]"
												default_format = "#high"
												multiline = yes
											}

											text_single = {
												name = "main_end_war_effect_spacing"
												autoresize = yes
												maximumsize = { 520 -1 }
												minimumsize = { 520 -1 }
												text = " "
												multiline = yes
											}

											text_single = {
												name = "other_end_war_effects"
												autoresize = yes
												maximumsize = { 520 -1 }
												minimumsize = { 520 -1 }
												text = "[WarOverviewWindow.GetCurrentTabEffectsDescription]"
												multiline = yes
												margin_bottom = 5
											}
										}
									}
								}

								widget = {
									name = "acceptance"
									size = { 200 50 }
									visible = "[And(WarOverviewWindow.IsPlayerParticipant, WarOverviewWindow.NeedsAnswer)]"
									tooltip = "[WarOverviewWindow.GetAnswerReason]"

									progressbar_standard = {
										name = "answer_chance"
										size = { 200 35 }
										position = { 0 6 }
										value = "[WarOverviewWindow.GetAnswerScore]"
										parentanchor = hcenter
									}

									text_single = {
										name = "answer"
										size = { 200 40 }
										position = { 0 10 }
										align = center
										text = "[WarOverviewWindow.GetAnswer]"
										parentanchor = hcenter
									}
								}

								expand = {
									visible = "[Not(And(WarOverviewWindow.IsPlayerParticipant, WarOverviewWindow.NeedsAnswer))]"
									size = { 200 50 }
								}

								### SEND BUTTON
								button_primary = {
									name = "send_button"
									visible = "[WarOverviewWindow.IsPlayerParticipant]"
									size = { 400 42 }
									text = "[WarOverviewWindow.GetSendButtonLabel]"
									enabled = "[WarOverviewWindow.CanSend]"
									onclick = "[WarOverviewWindow.Send]"
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_advance"
									tooltip = "[WarOverviewWindow.GetSendButtonTooltip]"
								}
							}
						}
					}

				### BUTTONS ###
					hbox = {
						name = "tab_buttons"
						ignoreinvisible = yes
						margin = { 5 0 }
						layoutpolicy_horizontal = expanding

						button_tab = {
							#name = "sue_button"
							name = "white_peace_button"
							layoutpolicy_horizontal = expanding
							size = { 0 50 }
							margin_left = 35
							mirror = vertical
							onclick = "[PdxGuiTriggerAllAnimations('war_end_terms_refresh')]"
							onclick = "[WarOverviewWindow.SetEffectsTabVictory]"
							down = "[WarOverviewWindow.IsEffectsTabVictory]"
							text = "Open Menu"
							default_format = "#high"
							using = Font_Size_Big
							fontsize_min = 16
							using = Font_Type_Flavor

						}
					}
				}
			}

			#### LEFT ####
			icon = {
				texture = "gfx/interface/window_war/decoration_defender.dds"
				visible = "[Not(WarOverviewWindow.IsLeftSideAttacker)]"

				size = { 120 270}
				position = { -94 0 }
				parentanchor = bottom|left
				widgetanchor = bottom|left
			}

			icon = {
				texture = "gfx/interface/window_war/decoration_attacker.dds"
				visible = "[WarOverviewWindow.IsLeftSideAttacker]"
				mirror = horizontal

				size = { 120 270}
				position = { -94 0 }
				parentanchor = bottom|left
				widgetanchor = bottom|left
			}

			#### RIGHT ####
			icon = {
				texture = "gfx/interface/window_war/decoration_attacker.dds"
				visible = "[Not(WarOverviewWindow.IsLeftSideAttacker)]"

				size = { 120 270}
				position = { 94 0 }
				parentanchor = bottom|right
				widgetanchor = bottom|right
			}

			icon = {
				texture = "gfx/interface/window_war/decoration_defender.dds"
				visible = "[WarOverviewWindow.IsLeftSideAttacker]"
				mirror = horizontal

				size = { 120 270}
				position = { 94 0 }
				parentanchor = bottom|right
				widgetanchor = bottom|right
			}
		}
	}

	#list offer
	widget = {
		name = "list_offer"
		using = Window_Background_Subwindow
		minimumsize = { 420 490 }
		alwaystransparent = no

		position = { -310 0 }
		parentanchor = hcenter
		widgetanchor = right|vcenter

		focuspolicy = click
		visible = "[GetVariableSystem.Exists( 'view_offer')]"
		allow_outside = yes

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			on_start = "[GetVariableSystem.Set( 'list_offer_open', 'true'  )]"
			position_y = -35
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			on_start = "[GetVariableSystem.Clear( 'list_offer_open' )]"
			position_y = 50
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 4 4 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "Offer Tribute"
				}

				blockoverride "button_close"
				{
					#onclick = "[ExecuteConsoleCommand('effect peace_reset_list')]"
					onclick = "[GetVariableSystem.Clear( 'view_offer')]"
				}
			}

			###LIST ###
		scrollbox = {
			name = "description_scrollarea"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content"
			{
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 10

					vbox = {
						name = "effect"
						visible = "[DecisionDetailView.HasEffect]"
						layoutpolicy_horizontal = expanding
					
						background = {
							name = "illustrations"
							texture = "gfx/interface/icons/lifestyle_tree_backgrounds/skulduggery.dds"
							tintcolor = { 0.6 0.8 0.8 0.8 }

							margin = { 0 5 }
							using = Mask_Rough_Edges
							alpha = 0.8
							fittype = centercrop
							mirror = horizontal

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_corners_bottom.dds"
								blend_mode = alphamultiply
								alpha = 0.6
							}

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_rough_edges.dds"
								blend_mode = overlay
								alpha = 0.4
							}
						}

						text_label_center = {
							text = "DECISION_DETAIL_EFFECTS"
						}

						text_multi = {
							layoutpolicy_horizontal = expanding
							margin = { 15 15 }
							max_width = 515
							autoresize = yes
							text = "[GetScriptedGui('the_peace_effect').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						}
					}



					expand = {}

				}
			}

			blockoverride "scrollbox_background_fade" {}
		}

		}
	}
	#get_offer
	widget = {
		name = "get_offer"
		using = Window_Background_Subwindow
		minimumsize = { 420 490 }
		alwaystransparent = no

		position = { 310 -50 }
		parentanchor = hcenter
		widgetanchor = left|vcenter

		focuspolicy = click
		visible = "[GetVariableSystem.Exists( 'view_offer')]"
		allow_outside = yes

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			on_start = "[GetVariableSystem.Set( 'get_offer_open', 'true'  )]"
			position_y = -35
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			on_start = "[GetVariableSystem.Clear( 'get_offer_open' )]"
			position_y = 50
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 4 4 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "Demand Tribute"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear( 'view_offer')]"
					#onclick = "[ExecuteConsoleCommand('effect peace_reset_list')]"
				}
			}

			### LIST ###
		scrollbox = {
			name = "description_scrollarea"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			datacontext = "[GetScriptedGui('the_peace_effect')]"
			blockoverride "scrollbox_content"
			{
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 10

					vbox = {
						name = "effect"
						#datacontext = "[GetScriptedGui('the_peace_effect')]"
						#visible = "[DecisionDetailView.HasEffect]"
						layoutpolicy_horizontal = expanding
					
						background = {
							name = "illustrations"
							texture = "gfx/interface/icons/lifestyle_tree_backgrounds/skulduggery.dds"
							tintcolor = { 0.6 0.8 0.8 0.8 }

							margin = { 0 5 }
							using = Mask_Rough_Edges
							alpha = 0.8
							fittype = centercrop
							mirror = horizontal

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_corners_bottom.dds"
								blend_mode = alphamultiply
								alpha = 0.6
							}

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_rough_edges.dds"
								blend_mode = overlay
								alpha = 0.4
							}
						}

						text_label_center = {
							text = "DECISION_DETAIL_EFFECTS"
						}

						text_multi = {
							layoutpolicy_horizontal = expanding
							margin = { 15 15 }
							max_width = 515
							autoresize = yes
							text = "[GetScriptedGui('the_peace_effect2').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							#text = "[GetScriptedGui('the_peace_effect').ExecuteToolTip(GuiScope.SetRoot(GetPlayer.MakeScope).End]" #AddScope('X', X).End]"
						}
					}

					expand = {}

				}
			}

			blockoverride "scrollbox_background_fade" {}
		}

		}
	}

	widget = {
		name = "list_left"
		using = Window_Background_Subwindow
		minimumsize = { 420 490 }
		alwaystransparent = no

		position = { -310 0 }
		parentanchor = hcenter
		widgetanchor = right|vcenter

		focuspolicy = click
		visible = "[GetVariableSystem.Exists( 'characterlist_left')]"
		allow_outside = yes

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			on_start = "[GetVariableSystem.Set( 'list_left_open', 'true'  )]"
			
			position_y = -35
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			on_start = "[GetVariableSystem.Clear( 'list_left_open' )]"
			position_y = 50
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 4 4 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "[WarOverviewWindow.GetLeftSideAlliesHeader]"
				}

				blockoverride "button_close"
				{
					onclick = "[ExecuteConsoleCommand('effect peace_reset_list')]"
					onclick = "[GetVariableSystem.Clear( 'characterlist_left')]"
				}
			}

			###LIST ###
			scrollbox = {
				name = "characters_scroll_area"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				blockoverride "scrollbox_content" {
					vbox = {
						layoutpolicy_horizontal = expanding

						datamodel = "[WarOverviewWindow.GetLeftSideParticipantItems]"

						item = {

							hbox = {
								layoutpolicy_horizontal = expanding

								portrait_head_small = {
									datacontext = "[WarParticipantItem.GetCharacter]"
									blockoverride "opinion_box" {}
									blockoverride "portrait_button_template_tooltip"
									{
										tooltip = "[WarParticipantItem.GetParticipantTooltip]"
									}
								}

								vbox = {
									layoutpolicy_vertical = growing
									layoutpolicy_horizontal = expanding
									margin = { 10 5 }

									background = {
										using = Background_Area_With_Header
									}

									text_single = {
										text = "[WarParticipantItem.GetCharacter.GetName]"
										layoutpolicy_horizontal = expanding
										align = left
										autoresize = no
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = growing

										soldiers_and_quality_small = {
											datacontext = "[WarParticipantItem.GetComposition]"
										}

										expand = {
											layoutpolicy_vertical = growing
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	widget = {
		name = "list_right"
		using = Window_Background_Subwindow
		minimumsize = { 420 490 }
		alwaystransparent = no

		position = { 310 -50 }
		parentanchor = hcenter
		widgetanchor = left|vcenter

		focuspolicy = click
		visible = "[GetVariableSystem.Exists( 'characterlist_right')]"
		allow_outside = yes

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			on_start = "[GetVariableSystem.Set( 'list_right_open', 'true'  )]"
			position_y = -35
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			on_start = "[GetVariableSystem.Clear( 'list_right_open' )]"
			position_y = 50
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			margin = { 4 4 }

			header_pattern = {
				layoutpolicy_horizontal = expanding

				blockoverride "header_text"
				{
					text = "[WarOverviewWindow.GetRightSideAlliesHeader]"
				}

				blockoverride "button_close"
				{
					onclick = "[GetVariableSystem.Clear( 'characterlist_right')]"
					onclick = "[ExecuteConsoleCommand('effect peace_reset_list')]"
				}
			}

			### LIST ###
			scrollbox = {
				name = "characters_scroll_area"
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				blockoverride "scrollbox_content" {
					vbox = {
						datamodel = "[WarOverviewWindow.GetRightSideParticipantItems]"
						layoutpolicy_horizontal = expanding

						item = {
							hbox = {
								layoutpolicy_horizontal = expanding

								portrait_head = {
									datacontext = "[WarParticipantItem.GetCharacter]"
									blockoverride "opinion_box" {}
									blockoverride "portrait_button_template_tooltip"
									{
										tooltip = "[WarParticipantItem.GetParticipantTooltip]"
									}
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = growing
									margin = { 10 5 }

									background = {
										using = Background_Area_With_Header
									}

									text_single = {
										text = "[WarParticipantItem.GetCharacter.GetName]"
										autoresize = no
										layoutpolicy_horizontal = expanding
										align = left
									}

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = growing

										soldiers_and_quality_small = {
											datacontext = "[WarParticipantItem.GetComposition]"
										}

										expand = {
											layoutpolicy_vertical = growing
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

template Background_WarOverview
{
	texture = "gfx/interface/window_war/window_background.dds"
	spriteType = Corneredtiled
	spriteborder_right = 410
	spriteborder_bottom = -10
}

template Background_WarOverview_2
{
	texture = "gfx/interface/window_war/window_background_2.dds"
	spriteType = Corneredtiled
	spriteborder_bottom = -10
}

template Background_WarOverview_Pattern
{
	texture = "gfx/interface/component_masks/patterns/mask_pattern_03.dds"
	spriteType = corneredtiled
	color = { 0.1 0.1 0.12 1 }
	texture_density = 0.6

	modify_texture = {
		texture = "gfx/interface/window_war/window_background.dds"
		blend_mode = alphamultiply
	}

	modify_texture = {
		texture = "gfx/interface/component_masks/mask_clouds.dds"
		blend_mode = alphamultiply
	}
}

template Background_WarOverview_Pattern_2
{
	texture = "gfx/interface/component_masks/patterns/mask_pattern_03.dds"
	spriteType = corneredtiled
	color = { 0.1 0.1 0.12 1 }
	texture_density = 0.6

	modify_texture = {
		texture = "gfx/interface/window_war/window_background_2.dds"
		blend_mode = alphamultiply
	}

	modify_texture = {
		texture = "gfx/interface/component_masks/mask_clouds.dds"
		blend_mode = alphamultiply
	}
}

template Background_WarOverview_Frame
{
	texture = "gfx/interface/window_war/window_frame.dds"
	spriteType = Corneredtiled
	spriteborder_right = 410
	spriteborder_bottom = -10
}

template Background_WarOverview_Frame_2
{
	texture = "gfx/interface/window_war/window_frame_2.dds"
	spriteType = Corneredtiled
	spriteborder_bottom = -10
}

template Background_WarOverview_Ally
{

	background = {
		using = Background_Area_Solid
		margin = { 10 0 }
		margin_top = -145
		margin_bottom = -85
	}

	background = {
		texture = "gfx/portraits/portrait_frame.dds"
		using = Color_Grey
		margin = { 5 -5 }
		margin_top = -150
		margin_bottom = -90

		alpha = 0.4

		spriteType = Corneredtiled
		spriteborder = { 3 3 }
	}
}

template Background_WarOverview_3
{
	background = {
		name = "background"
		texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"

		spriteType = Corneredtiled
		spriteborder = { 5 5 }
		color = { 1.77 1.77 1.80 1 }
        texture_density = 2

		margin_top = -120
		alpha = 0.5

		modify_texture = {
			texture = "gfx/interface/component_overlay/overlay_window.dds"
			blend_mode = overlay
		}
	}

	background = {
		texture = "gfx/interface/component_tiles/tile_frame_subwindow_01.dds"

		spriteType = Corneredtiled
		spriteborder = { 10 10 }

		margin = { 5 0}
		margin_top = -114
	}
}

### ANIMATIONS
template Animation_WarOverview_Blood
{
	state = {
		name = "war_overview_show"
		next = b
		delay = 0.5
		alpha = 0
	}

	state = {
		name = b
		duration = 3.5
		alpha = 1
	}

	state = {
		name = "war_overview_hide"
		duration = 0.25
		using = Animation_Curve_Default
		alpha = 0
	}
}

types WarOverView
{
	type icon_blood_splatter = highlight_icon {
		size = { 474 270 }
		parentanchor = bottom|hcenter

		texture = "gfx/interface/window_war/blood.dds"
		spriteType = Corneredtiled
		spriteborder_right = 410

		modify_texture = {
			name = "mask"
			texture = "gfx/interface/window_war/window_frame_broken.dds"
			blend_mode = mask
		}

		using = Animation_WarOverview_Blood
	}

	type icon_blood_splatter_2 = highlight_icon {
		size = { 350 270 }
		parentanchor = bottom|hcenter

		texture = "gfx/interface/window_war/blood_2.dds"
		spriteType = Corneredtiled
		spriteborder = { 238 0 }
		spriteborder_bottom = -10

		modify_texture = {
			name = "mask"
			texture = "gfx/interface/component_masks/mask_fade_circle.dds"
			blend_mode = mask
		}

		using = Animation_WarOverview_Blood
	}

	type icon_cloth_tears = highlight_icon {
		size = { 474 280 }
		parentanchor = bottom|hcenter

		texture = "gfx/interface/window_war/window_frame_broken.dds"
		spriteType = Corneredtiled
		spriteborder_right = 410
		spriteborder_bottom = -10

		using = Animation_ShowHide_Standard
	}

	type icon_cloth_tears_2 = highlight_icon {
		size = { 350 280 }
		parentanchor = bottom|hcenter

		texture = "gfx/interface/window_war/window_frame_broken_2.dds"
		spriteType = Corneredtiled
		spriteborder_bottom = -10

		using = Animation_ShowHide_Standard
	}
}

